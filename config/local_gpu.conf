include required(classpath("application"))

webservice {
  port = 9000
  interface = 0.0.0.0
  instance.name = "reference"
}

system {
  abort-jobs-on-terminate = false
  max-retries = 3
  workflow-restart = true
  file-hash-cache = true
  max-concurrent-workflows = 24
  max-workflow-launch-count = 50
  new-workflow-poll-rate = 20
  number-of-workflow-log-copy-workers = 10
}

call-caching {
  enabled = true
  invalidate-bad-cache-results = false
  blacklist-cache {
    enabled: true
    concurrency: 10000
    ttl: 200 minutes
    size: 1000
  }
}

docker {
  hash-lookup {
    cache-size = 200
    method = "remote"
  }
}

backend {
  default = "Local"
  providers {
    Local {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
          concurrent-job-limit = 24
          run-in-background = true
          submit-docker = """
          sudo docker run \
          --rm \
          --runtime=nvidia \
          -v ${cwd}:${docker_cwd} \
          -i ${docker} /bin/bash ${docker_cwd}/execution/script
          """
          default-runtime-attributes {
              failOnStderr: false
              continueOnReturnCode: 0
          }
          root = "../cromwell-executions"

          filesystems {
            local {
              localization: [
                "hard-link", "soft-link", "copy"
              ]
              caching {
                duplication-strategy: [
                  "hard-link", "soft-link", "copy"
                ]
                hashing-strategy: "md5"
                check-sibling-md5: false
              }
            }
          }
        }
      }
  }
}

workflow-options {
    workflow_failure_mode = "ContinueWhilePossible"
    workflow-log-dir = "../cromwell-workflow-logs"
    workflow-log-temporary = false
}